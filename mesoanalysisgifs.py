# -*- coding: utf-8 -*-
"""MesoAnalysisGifs.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pbYblbwE7Sva2FjOQ1gTWzHK7m-IssOZ
"""

!pip install requests pillow #must run this one first

import os
import requests
from PIL import Image, ImageOps
from io import BytesIO
os.makedirs('images', exist_ok=True)

def fetch_image(date, hour, parameter):
    base_url = "https://www.spc.noaa.gov/exper/ma_archive/images_s4"
    url = f"{base_url}/{date}/{hour:02d}_{parameter}.gif"
    #print(f"Fetching URL: {url}")
    response = requests.get(url)
    if response.status_code == 200:
        try:
            image = Image.open(BytesIO(response.content)).convert("RGBA")
            white_bg = Image.new("RGBA", image.size, "WHITE")
            combined = Image.alpha_composite(white_bg, image)
            return combined.convert("RGB")
        except Exception as e: #fixed indentation here
            print(f"Failed to identify image for time {hour:02d}:00, Error: {e}")
            return None
    else:
        print(f"Failed to fetch image for time {hour:02d}:00, Status Code: {response.status_code}")
        return None

def fetch_and_save_images(date, start_hour, end_hour, parameter):
    images = []
    for hour in range(start_hour, end_hour + 1):
        image = fetch_image(date, hour, parameter)
        if image:
            image_path = f'images/{hour:02d}_{parameter}.gif'
            image.save(image_path)
            images.append(image_path)
    return images

def create_gif(image_paths, output_path):
    images = [Image.open(path) for path in image_paths]
    if images:
        images[0].save(output_path, save_all=True, append_images=images[1:], loop=0, duration=500, disposal=2)
        print(f"GIF saved to {output_path}")
    else:
        print("No images were fetched.")


#################################################################################################################
date = "20240715"  # YYYYMMDD format
start_hour = 0 #in UTC, can only go in 24 hour increments for one day at a time, change the day above but usually leave the start and end hours the same
end_hour = 12 #in UTC
parameter = "8fnt"  # this is the specific parameter shown on the image, see list below for the correct code.

###################################################################################################################

image_paths = fetch_and_save_images(date, start_hour, end_hour, parameter)
output_gif_path = "7_16_0z-12z_500mb.gif" #you can name this whatever you want, leave ".gif" at the end
create_gif(image_paths, output_gif_path)
#click on the folder icon to the left, then the three dots next to the file you named, then you can download it.

#Parameter Options (copy and paste these into the "parameter = " above):

#Basic Surface
MSL Pressure/Wind = "pmsl"
T/Td/Wind = "ttd"
Moisture Convergence = "mcon"
ThetaE Advection = "thea"
2hr Pressure Change = "pchg"

#Basic UA/Forcing Fields
850 mb = "850mb"
700 mb = "700mb"
500 mb = "500mb"
300 mb = "300mb"
Deep Moisture Convergence = "dlcp"
Surface Frontogenesis = "sfnt"
850mb Temperature Advection = "tadv"
850mb Frontogenesis = "8fnt"
700mb Frontogenesis = "7fnt"
850-700mb Frontogenesis = "857f"
700-500mb Frontogenesis = "75ft"
700-400mb Diff. Vorticity Advection = "vadv"
400-250mb Pot. Vorticity Advection = "padv"
850-250mb Diff. Divergence = "ddiv"
300 mb Jet Circulation = "ageo"

#Thermodynamic Fields
SB Cape/SB CIN = "sbcp"
100mb ML CAPE = "mlcp"
MU CAPE/LPL Height = "mucp"
SB Lifted Index/ CINH = "muli"
Mid-Level Lapse Rates = "laps"
Low-Level Lapse Rates = "lllr"
Normalized CAPE = "ncap"
Downdraft CAPE = "dcape"
LFC Height = "lfch"
LCL Height = "lclh"
LCL to LFC Mean RH = "lfrh"
Skew-t = "skewt"

#Wind Shear
850-300mb Mean Wind = "mnwd"
0-6km Shear Vector = "shr6"
0-8km Shear Vector = "shr8"
Effective Shear = "eshr"
BRN Shear = "brns"
0-1km SR Helicity = "srh1"
0-3km SR Helicity = "srh3"â€‹
Effective SR Helicity = "effh"
0-1km Shear Vector = "shr1"
850 & 500mb Wind Crossover = "xover"
Hodographs = "hodo" #not working for some reason

#Storm Relative Winds
0-2km SR Winds = "llsr"
4-6km SR Winds = "mlsr"
9-11km SR Winds = "hlsr"
Anvil Level SR Winds = "alsr"

#Composite Indices
Supercell Composite = "scp"
Supercell Composite (left-moving) = "lscp"
Significant Tornado (fixed layer) = "stor"
Significant Tornado (effective layer) = "stpc"
Significant Hail Parameter = "sigh"
Derecho Composite = "dcp"
Craven/Brooks SigSvr = "cbsig"
1km EHI = "ehi1"
3km EHI = "ehi3"
3km VGP = "vgp3"
MCS Maintenance Probability = "mcsm"
01km Tornadic Energy Helicity Index = "tehi"
Tornadic Tilting & Stretching = "tts"
#Multi-Parameter Fields
MUCAPE & Effective Bulk Shear = "cpsh"
MULI, 850 & 500mb Winds = "comp"
LCL Height/0-1km SRH = "lcls"
0-3km CAPE & Surface Voriticty = "3cvr"
Sfc Dewpoint/700-500mb LR = "tdlr"
Hail Parameters = "hail"

#Heavy Rainfall
Precipitable Water = "pwtr"
850 mb Moisture Transport = "tran"
Upwind Propagation Vector = "prop"

#Winter Weather
Surface Wet Bulb Temperature = "swbt"
Freezing Level Info = "fzlv"
Critical Thickness = "thck"
800-750 mb EPVg = "epvl"
650-500mb EPVg = "epvm"
Lake Effect Snow 1 = "les1"
Lake Effect Snow 2 = "les2"

#Fire Weather
Surface RH, Temperature, Wind = "sfir"
Fosberg Index = "fosb"
Low-Altitude Haines Index = "lhan"
Mid-Altitude Haines Index = "mhan"
High-Altitude Haines Index = "hhan"
Lower Atmos. Severity Index = "lasi"